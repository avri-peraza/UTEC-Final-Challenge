<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="test-plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Recorrido Usuario">
        <intProp name="ThreadGroup.num_threads">20</intProp>
        <intProp name="ThreadGroup.ramp_time">300</intProp>
        <longProp name="ThreadGroup.duration">300</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
          <stringProp name="HTTPSampler.domain">${__P(host,application)}</stringProp>
          <stringProp name="HTTPSampler.port">${__P(port,3000)}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Configuracion Header">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables">
          <collectionProp name="Arguments.arguments">
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
              <stringProp name="Argument.value">${__P(port,3000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="localhost" elementType="Argument">
              <stringProp name="Argument.name">localhost</stringProp>
              <stringProp name="Argument.value">${__P(host,application)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="email" elementType="Argument">
              <stringProp name="Argument.name">email</stringProp>
              <stringProp name="Argument.value">${__RandomString(6,abcdefghijklmnopqrstuvwxyz,)}@example.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Data User">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Users/Usuario/Desktop/Universidad/Quinto Semestre/Testing de Performance/Trabajo Integrador/Trabajo Integrador/UTEC-Final-Challenge/jmeter/users.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">email,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once - Inicializar Variables" enabled="true"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Inicializar Variables de Login" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&quot;retryCount&quot;, &quot;0&quot;)
vars.put(&quot;loginSuccess&quot;, &quot;false&quot;)
vars.put(&quot;token&quot;, &quot;&quot;)
   
log.info(&quot;🚀 Variables inicializadas UNA SOLA VEZ&quot;)</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop - Intentar Login (Max 3 veces)" enabled="true">
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Incrementar Contador Login " enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def count = Integer.parseInt(vars.get(&quot;retryCount&quot;)) + 1
vars.put(&quot;retryCount&quot;, count.toString())

// Log mejorado
log.info(&quot;🔄 Intento de Login #&quot; + count)</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If - Token Obtenido → Salir del Loop " enabled="true">
            <stringProp name="IfController.condition">${__groovy(vars.get(&quot;loginSuccess&quot;) == &quot;true&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Break Loop - Token Obtenido " enabled="true">
              <intProp name="ActionProcessor.action">5</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Login" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="683207277">Trabajo-Integrador</stringProp>
              <stringProp name="-1089917332">Test Fragment - Autenticacion</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If - Login Exitoso → Continuar con Requests" enabled="true">
          <stringProp name="IfController.condition">${__groovy(vars.get(&quot;loginSuccess&quot;) == &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Obtener Productos" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="683207277">Trabajo-Integrador</stringProp>
              <stringProp name="132353982">Test Fragment - Productos</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Crear Carrito" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="683207277">Trabajo-Integrador</stringProp>
              <stringProp name="774587441">Test Fragment - Carrito</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Realizar Compra" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="683207277">Trabajo-Integrador</stringProp>
              <stringProp name="2115975347">Test Fragment - Compra</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If - Login Falló → Detener Ejecución " enabled="true">
          <stringProp name="IfController.condition">${__groovy(vars.get(&quot;loginSuccess&quot;) != &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="ERROR - No se pudo obtener token después de todos los reintentos " enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="true">
          <collectionProp name="prometheus.collector_definitions">
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">Sampler Response Time</stringProp>
              <stringProp name="collector.metric_name">ResponseTime</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.listen_to">samples</stringProp>
              <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">Success and failure ratio</stringProp>
              <stringProp name="collector.metric_name">Ratio</stringProp>
              <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
              <stringProp name="listener.collector.listen_to">samples</stringProp>
              <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">default help string</stringProp>
              <stringProp name="collector.metric_name">jmeter_status_code</stringProp>
              <stringProp name="collector.type">COUNTER</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">default help strin</stringProp>
              <stringProp name="collector.metric_name">jmeter_error_count</stringProp>
              <stringProp name="collector.type">COUNTER</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
            </elementProp>
          </collectionProp>
        </com.github.johrstrom.listener.PrometheusListener>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - Autenticacion"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login">
          <stringProp name="HTTPSampler.path">/auth</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;email&quot;: &quot;${email}&quot;, &#xd;
	&quot;password&quot;: &quot;${password}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Token Extractor">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">TOKEN_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Body Assertion">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2017977937">&quot;token&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Verificar Token" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">def token = vars.get(&quot;token&quot;)
def responseCode = prev.getResponseCode()

log.info(&quot;&gt;&gt;&gt; Verificando extracción...&quot;)
log.info(&quot;&gt;&gt;&gt; Response Code: &quot; + responseCode)
log.info(&quot;&gt;&gt;&gt; Token extraído: &quot; + (token != null ? token.substring(0, Math.min(20, token.length())) : &quot;NULL&quot;))

// Verificar si se obtuvo el token
if (token != null &amp;&amp; 
    token != &quot;TOKEN_NOT_FOUND&quot; &amp;&amp; 
    token != &quot;&quot; &amp;&amp;
    responseCode == &quot;200&quot;) {
    
    vars.put(&quot;loginSuccess&quot;, &quot;true&quot;)
    log.info(&quot;✅ LOGIN EXITOSO - Token obtenidos&quot;)
} else {
    
    vars.put(&quot;loginSuccess&quot;, &quot;false&quot;)
    log.warn(&quot;❌ LOGIN FALLIDO&quot;)
    log.warn(&quot;❌ Token: &quot; + token)
    log.warn(&quot;❌ Response Code: &quot; + responseCode)
}

log.info(&quot;&gt;&gt;&gt; Verificación final: loginSuccess = &quot; + vars.get(&quot;loginSuccess&quot;))


// Verificar que se guardó correctamente
log.info(&quot;&gt;&gt;&gt; Verificación final: loginSuccess = &quot; + vars.get(&quot;loginSuccess&quot;))</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="true">
            <collectionProp name="prometheus.collector_definitions">
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Sampler Response Time</stringProp>
                <stringProp name="collector.metric_name">ResponseTime</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Success and failure ratio</stringProp>
                <stringProp name="collector.metric_name">Ratio</stringProp>
                <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">jmeter_status_code</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
              </elementProp>
            </collectionProp>
          </com.github.johrstrom.listener.PrometheusListener>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - Productos" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Obtener Productos">
          <stringProp name="HTTPSampler.path">/products</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="true">
            <collectionProp name="prometheus.collector_definitions">
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Sampler Response Time</stringProp>
                <stringProp name="collector.metric_name">ResponseTime</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Success and failure ratio</stringProp>
                <stringProp name="collector.metric_name">Ratio</stringProp>
                <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">jmeter_status_code</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
              </elementProp>
            </collectionProp>
          </com.github.johrstrom.listener.PrometheusListener>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - Carrito" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear Carrito" enabled="true">
          <stringProp name="HTTPSampler.path">/cart</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Body Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1317710827">&quot;cartId&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="true">
            <collectionProp name="prometheus.collector_definitions">
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Sampler Response Time</stringProp>
                <stringProp name="collector.metric_name">ResponseTime</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Success and failure ratio</stringProp>
                <stringProp name="collector.metric_name">Ratio</stringProp>
                <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">jmeter_status_code</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
              </elementProp>
            </collectionProp>
          </com.github.johrstrom.listener.PrometheusListener>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment - Compra" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compra" enabled="true">
          <stringProp name="HTTPSampler.path">/checkout</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Body Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1516560703">&quot;orderId&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="true">
            <collectionProp name="prometheus.collector_definitions">
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Sampler Response Time</stringProp>
                <stringProp name="collector.metric_name">ResponseTime</stringProp>
                <stringProp name="collector.type">SUMMARY</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">Success and failure ratio</stringProp>
                <stringProp name="collector.metric_name">Ratio</stringProp>
                <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="102727412">label</stringProp>
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
                <stringProp name="listener.collector.listen_to">samples</stringProp>
                <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
              </elementProp>
              <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
                <stringProp name="collector.help">default help string</stringProp>
                <stringProp name="collector.metric_name">jmeter_status_code</stringProp>
                <stringProp name="collector.type">COUNTER</stringProp>
                <collectionProp name="collector.labels">
                  <stringProp name="3059181">code</stringProp>
                </collectionProp>
                <stringProp name="collector.quantiles_or_buckets"></stringProp>
              </elementProp>
            </collectionProp>
          </com.github.johrstrom.listener.PrometheusListener>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
